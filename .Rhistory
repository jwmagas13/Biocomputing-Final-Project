for (j in 1:diff){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- markercumulativey[i-1,]
}
}
}
else{
next
}
}
y_totals_by_day
initvec
#for loop will go through each row in markercumulativey
#dayycurr will be initially saved as whatever the day of the year is for the current row in the loop
#in this case I need to save the row from the previous loop (or as all zeros other than the day if it was the first time through the loop)
#I need to determine how many days were skipped to know how many rows to make
#if not the first time through, then it will take the previous days values and paste them on the next row, since those values should be the same if there were no positive cases for the following day
rm(y_totals_by_day)
y_totals_by_day <- data.frame("Marker_01_Y" = integer(), "Marker_02_Y" = integer(), "Marker_03_Y" = integer(), "Marker_04_Y" = integer(), "Marker_05_Y" = integer(), "Marker_06_Y" = integer(), "Marker_07_Y" = integer(), "Marker_08_Y" = integer(), "Marker_09_Y" = integer(), "Marker_10_Y" = integer(), "Cumulative_Pos_Y" = integer(), "DayofYear_Y" = integer(), stringsAsFactors = FALSE)
#go from 120-175
#check if it is in day_of_yeary
#or go through each row
#using dayycurr and dayyprev to know when the day increments. I will then save the row before the increment.
#if increment is >1 then I will save the row before the increment however many times the distance between the two was.
#initial state is set to the first day in "dataset" and all other columns are set to 0 in case there were no cases on the first day of data collection for either of the countries
dayycurr = data$dayofYear[1]
dayyprev = data$dayofYear[1]
for (i in 1:length(markercumulativey$day_of_year)){
if (i == 1){
dayyprev = data$dayofYear[1]
}
else{
dayyprev = markercumulativey$day_of_yeary[i-1]
}
dayycurr = markercumulativey$day_of_yeary[i]
if (dayycurr != dayyprev){
diff = dayycurr - dayyprev
if (i == 1){
for (j in 1:diff){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- initvec <- c(rep(0, 11),(first_day + i - 1))
}
}
else{
for (j in 1:diff){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- markercumulativey[i-1,]
}
}
}
else{
next
}
}
initvec
for (i in 1:length(markercumulativey$day_of_year)){
if (i == 1){
dayyprev = data$dayofYear[1]
}
else{
dayyprev = markercumulativey$day_of_yeary[i-1]
}
dayycurr = markercumulativey$day_of_yeary[i]
if (dayycurr != dayyprev){
diff = dayycurr - dayyprev
if (i == 1){
for (j in 1:diff){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- initvec <- c(rep(0, 11),(first_day + j - 1))
}
}
else{
for (j in 1:diff){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- markercumulativey[i-1,]
}
}
}
else{
next
}
}
initvec
y_totals_by_day
tail(y_totals_by_day)
for (i in 1:length(markercumulativey$day_of_year)){
if (i == 1){
dayyprev = data$dayofYear[1]
}
else{
dayyprev = markercumulativey$day_of_yeary[i-1]
}
dayycurr = markercumulativey$day_of_yeary[i]
if (dayycurr != dayyprev){
diff = dayycurr - dayyprev
if (i == 1){
for (j in 1:diff){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- c(rep(0, 11),(first_day + j - 1))
}
}
else{
for (j in 1:diff){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- markercumulativey[i-1,]
}
}
}
else{
next
}
}
y_totals_by_day
tail(y_totals_by_day)
#clear previous contents
rm(list=ls())
# load a package every time you wish to use it
library(ggplot2)
library(cowplot)
#load the combined data from all countries and name it "data"
data<-read.csv("allData.csv")
head(data)
#now i can create a dataframe for Country X and Country Y with the applicable Titles and empty rows
dfcx <- data.frame("Marker_01_X" = integer(), "Marker_02_X" = integer(), "Marker_03_X" = integer(), "Marker_04_X" = integer(), "Marker_05_X" = integer(), "Marker_06_X" = integer(), "Marker_07_X" = integer(), "Marker_08_X" = integer(), "Marker_09_X" = integer(), "Marker_10_X" = integer(), "Cumulative_Pos_X" = integer(), "DayofYear_X" = integer(), stringsAsFactors = FALSE)
dfcx
dfcy <- data.frame("Marker_01_Y" = integer(), "Marker_02_Y" = integer(), "Marker_03_Y" = integer(), "Marker_04_Y" = integer(), "Marker_05_Y" = integer(), "Marker_06_Y" = integer(), "Marker_07_Y" = integer(), "Marker_08_Y" = integer(), "Marker_09_Y" = integer(), "Marker_10_Y" = integer(), "Cumulative_Pos_Y" = integer(), "DayofYear_Y" = integer(), stringsAsFactors = FALSE)
dfcy
head(data)
data = data[,!grepl("age", names(data))]
data = data[,!grepl("gender", names(data))]
head(data)
#now I will use loops to look through each row in "data"
#I will be using these loops to place any positive cases from country X into a data frame
#And I will be placing any positive cases from country Y into a separate data frame
#I will do this by first checking the row to see what country the data pertains to
#Then I will look through each marker in that row to determine if there is a positive marker
#As soon as a positive marker is detected, the nested for loop will "break", the data will be placed into the next row in the correspoding countries dataframe
#And the next row will be looked at by the starting for loop
for (j in 1:length(data$country)){
if (data$country[j] == "X"){
for (i in 1:(length(colnames(data))-2)){
if (data[j,i] == 1){
dfcx[nrow(dfcx) + 1,] <- data[j,]
break
}
}
}
else{
for (i in 1:(length(colnames(data))-2)){
if (data[j,i] == 1){
dfcy[nrow(dfcy) + 1,] <- data[j,]
break
}
}
}
}
head(dfcx)
tail(dfcx)
head(dfcy)
tail(dfcy)
#determine what the first day of the year testing was performed
first_day = min(data$dayofYear)
#determine what the last day of the year testing was performed
last_day = max(data$dayofYear)
#First processing everything for country X:
mar1cumx <- cumsum(dfcx$Marker_01_X)
mar2cumx <- cumsum(dfcx$Marker_02_X)
mar3cumx <- cumsum(dfcx$Marker_03_X)
mar4cumx <- cumsum(dfcx$Marker_04_X)
mar5cumx <- cumsum(dfcx$Marker_05_X)
mar6cumx <- cumsum(dfcx$Marker_06_X)
mar7cumx <- cumsum(dfcx$Marker_07_X)
mar8cumx <- cumsum(dfcx$Marker_08_X)
mar9cumx <- cumsum(dfcx$Marker_09_X)
mar10cumx <- cumsum(dfcx$Marker_10_X)
subjcumx <- cumsum(rep(1,length(dfcx$Cumulative_Pos_X)))
day_of_yearx <- dfcx$DayofYear_X
markercumulativex <- data.frame(cbind(mar1cumx,mar2cumx,mar3cumx,mar4cumx,mar5cumx,mar6cumx,mar7cumx,mar8cumx,mar9cumx,mar10cumx,subjcumx,day_of_yearx))
head(markercumulativex)
tail(markercumulativex)
#Now processing everything for country Y:
mar1cumy <- cumsum(dfcy$Marker_01_Y)
mar2cumy <- cumsum(dfcy$Marker_02_Y)
mar3cumy <- cumsum(dfcy$Marker_03_Y)
mar4cumy <- cumsum(dfcy$Marker_04_Y)
mar5cumy <- cumsum(dfcy$Marker_05_Y)
mar6cumy <- cumsum(dfcy$Marker_06_Y)
mar7cumy <- cumsum(dfcy$Marker_07_Y)
mar8cumy <- cumsum(dfcy$Marker_08_Y)
mar9cumy <- cumsum(dfcy$Marker_09_Y)
mar10cumy <- cumsum(dfcy$Marker_10_Y)
subjcumy <- cumsum(rep(1,length(dfcy$Cumulative_Pos_Y)))
day_of_yeary <- dfcy$DayofYear_Y
markercumulativey <- data.frame(cbind(mar1cumy,mar2cumy,mar3cumy,mar4cumy,mar5cumy,mar6cumy,mar7cumy,mar8cumy,mar9cumy,mar10cumy,subjcumy,day_of_yeary))
head(markercumulativey)
tail(markercumulativey)
x_totals_by_day <- data.frame("Marker_01_X" = integer(), "Marker_02_X" = integer(), "Marker_03_X" = integer(), "Marker_04_X" = integer(), "Marker_05_X" = integer(), "Marker_06_X" = integer(), "Marker_07_X" = integer(), "Marker_08_X" = integer(), "Marker_09_X" = integer(), "Marker_10_X" = integer(), "Cumulative_Pos_X" = integer(), "DayofYear_X" = integer(), stringsAsFactors = FALSE)
#go from 120-175
#check if it is in day_of_yearx
#or go through each row
#using dayxcurr and dayxprev to know when the day increments. I will then save the row before the increment.
#if increment is >1 then I will save the row before the increment however many times the distance between the two was.
#initial state is set to the first day in "dataset" and all other columns are set to 0 in case there were no cases on the first day of data collection for either of the countries
dayxcurr = data$dayofYear[1]
dayxprev = data$dayofYear[1]
#this will be the initial vector that can be used if there were no positive cases on day 1
#it can be used for both country x and y
initvec <- c(rep(0, 11),first_day)
for (i in 1:length(markercumulativex$day_of_year)){
if (i == 1){
dayxprev = data$dayofYear[1]
}
else{
dayxprev = markercumulativex$day_of_yearx[i-1]
}
dayxcurr = markercumulativex$day_of_yearx[i]
if (dayxcurr != dayxprev){
diff = dayxcurr - dayxprev
if (i == 1){
for (j in 1:diff){
x_totals_by_day[nrow(x_totals_by_day)+1,] <- c(rep(0, 11),(first_day + j - 1))
}
}
else{
for (j in 1:diff){
x_totals_by_day[nrow(x_totals_by_day)+1,] <- markercumulativex[i-1,]
}
}
}
else{
next
}
}
y_totals_by_day <- data.frame("Marker_01_Y" = integer(), "Marker_02_Y" = integer(), "Marker_03_Y" = integer(), "Marker_04_Y" = integer(), "Marker_05_Y" = integer(), "Marker_06_Y" = integer(), "Marker_07_Y" = integer(), "Marker_08_Y" = integer(), "Marker_09_Y" = integer(), "Marker_10_Y" = integer(), "Cumulative_Pos_Y" = integer(), "DayofYear_Y" = integer(), stringsAsFactors = FALSE)
#go from 120-175
#check if it is in day_of_yeary
#or go through each row
#using dayycurr and dayyprev to know when the day increments. I will then save the row before the increment.
#if increment is >1 then I will save the row before the increment however many times the distance between the two was.
#initial state is set to the first day in "dataset" and all other columns are set to 0 in case there were no cases on the first day of data collection for either of the countries
dayycurr = data$dayofYear[1]
dayyprev = data$dayofYear[1]
for (i in 1:length(markercumulativey$day_of_year)){
if (i == 1){
dayyprev = data$dayofYear[1]
}
else{
dayyprev = markercumulativey$day_of_yeary[i-1]
}
dayycurr = markercumulativey$day_of_yeary[i]
if (dayycurr != dayyprev){
diff = dayycurr - dayyprev
if (i == 1){
for (j in 1:diff){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- c(rep(0, 11),(first_day + j - 1))
}
}
else{
for (j in 1:diff){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- markercumulativey[i-1,]
}
}
}
else{
next
}
}
ggplot(Positive_Cases, aes(x = dayofYear)) +
geom_line(aes(y = X), linewidth = 2, color = "darkgreen") +
geom_line(aes(y = Y), linewidth = 2, color = "purple") +
xlab("Time (Day of Year)") +
ylab("Positive Cases") +
theme(axis.ticks.x = element_blank())
y_totals_by_day
#If there is a gap in day_of_yearx somewhere from 120-175 I need to insert a row in using data from previous row so that there are no gaps in days and so both country x and country y have the same nubmer of rows
x_totals_by_day
for (i in 1:length(markercumulativey$day_of_year)){
if (i == 1){
dayyprev = data$dayofYear[1]
}
else{
dayyprev = markercumulativey$day_of_yeary[i-1]
}
dayycurr = markercumulativey$day_of_yeary[i]
if (dayycurr != dayyprev){
diff = dayycurr - dayyprev
if (i == 1){
for (j in 1:diff){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- c(rep(0, 11),(first_day + j - 1))
}
}
else{
for (j in 1:diff){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- markercumulativey[i-1,]
}
}
}
else{
next
}
if (i == length(markercumulativey$day_of_year)){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- tail(markercumulativey,1)
}
}
y_totals_by_day
tail(y_totals_by_day)
for (i in 1:length(markercumulativey$day_of_year)){
if (i == 1){
dayyprev = data$dayofYear[1]
}
else{
dayyprev = markercumulativey$day_of_yeary[i-1]
}
dayycurr = markercumulativey$day_of_yeary[i]
if (dayycurr != dayyprev){
diff = dayycurr - dayyprev
if (i == 1){
for (j in 1:diff){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- c(rep(0, 11),(first_day + j - 1))
}
}
else{
for (j in 1:diff){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- markercumulativey[i-1,]
}
}
}
if (i == length(markercumulativey$day_of_year)){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- tail(markercumulativey,1)
}
}
tail(y_totals_by_day)
for (i in 1:length(markercumulativex$day_of_year)){
if (i == 1){
dayxprev = data$dayofYear[1]
}
else{
dayxprev = markercumulativex$day_of_yearx[i-1]
}
dayxcurr = markercumulativex$day_of_yearx[i]
if (dayxcurr != dayxprev){
diff = dayxcurr - dayxprev
if (i == 1){
for (j in 1:diff){
x_totals_by_day[nrow(x_totals_by_day)+1,] <- c(rep(0, 11),(first_day + j - 1))
}
}
else{
for (j in 1:diff){
x_totals_by_day[nrow(x_totals_by_day)+1,] <- markercumulativex[i-1,]
}
}
}
if (i == length(markercumulativex$day_of_year)){
x_totals_by_day[nrow(x_totals_by_day)+1,] <- tail(markercumulativex,1)
}
}
#If there is a gap in day_of_yearx somewhere from 120-175 I need to insert a row in using data from previous row so that there are no gaps in days and so both country x and country y have the same nubmer of rows
x_totals_by_day
#If there is a gap in day_of_yearx somewhere from 120-175 I need to insert a row in using data from previous row so that there are no gaps in days and so both country x and country y have the same nubmer of rows
tail(x_totals_by_day)
#clear previous contents
rm(list=ls())
# load a package every time you wish to use it
library(ggplot2)
library(cowplot)
#load the combined data from all countries and name it "data"
data<-read.csv("allData.csv")
head(data)
#now i can create a dataframe for Country X and Country Y with the applicable Titles and empty rows
dfcx <- data.frame("Marker_01_X" = integer(), "Marker_02_X" = integer(), "Marker_03_X" = integer(), "Marker_04_X" = integer(), "Marker_05_X" = integer(), "Marker_06_X" = integer(), "Marker_07_X" = integer(), "Marker_08_X" = integer(), "Marker_09_X" = integer(), "Marker_10_X" = integer(), "Cumulative_Pos_X" = integer(), "DayofYear_X" = integer(), stringsAsFactors = FALSE)
dfcx
dfcy <- data.frame("Marker_01_Y" = integer(), "Marker_02_Y" = integer(), "Marker_03_Y" = integer(), "Marker_04_Y" = integer(), "Marker_05_Y" = integer(), "Marker_06_Y" = integer(), "Marker_07_Y" = integer(), "Marker_08_Y" = integer(), "Marker_09_Y" = integer(), "Marker_10_Y" = integer(), "Cumulative_Pos_Y" = integer(), "DayofYear_Y" = integer(), stringsAsFactors = FALSE)
dfcy
head(data)
data = data[,!grepl("age", names(data))]
data = data[,!grepl("gender", names(data))]
head(data)
#now I will use loops to look through each row in "data"
#I will be using these loops to place any positive cases from country X into a data frame
#And I will be placing any positive cases from country Y into a separate data frame
#I will do this by first checking the row to see what country the data pertains to
#Then I will look through each marker in that row to determine if there is a positive marker
#As soon as a positive marker is detected, the nested for loop will "break", the data will be placed into the next row in the correspoding countries dataframe
#And the next row will be looked at by the starting for loop
for (j in 1:length(data$country)){
if (data$country[j] == "X"){
for (i in 1:(length(colnames(data))-2)){
if (data[j,i] == 1){
dfcx[nrow(dfcx) + 1,] <- data[j,]
break
}
}
}
else{
for (i in 1:(length(colnames(data))-2)){
if (data[j,i] == 1){
dfcy[nrow(dfcy) + 1,] <- data[j,]
break
}
}
}
}
head(dfcx)
tail(dfcx)
head(dfcy)
tail(dfcy)
#determine what the first day of the year testing was performed
first_day = min(data$dayofYear)
#determine what the last day of the year testing was performed
last_day = max(data$dayofYear)
#First processing everything for country X:
mar1cumx <- cumsum(dfcx$Marker_01_X)
mar2cumx <- cumsum(dfcx$Marker_02_X)
mar3cumx <- cumsum(dfcx$Marker_03_X)
mar4cumx <- cumsum(dfcx$Marker_04_X)
mar5cumx <- cumsum(dfcx$Marker_05_X)
mar6cumx <- cumsum(dfcx$Marker_06_X)
mar7cumx <- cumsum(dfcx$Marker_07_X)
mar8cumx <- cumsum(dfcx$Marker_08_X)
mar9cumx <- cumsum(dfcx$Marker_09_X)
mar10cumx <- cumsum(dfcx$Marker_10_X)
subjcumx <- cumsum(rep(1,length(dfcx$Cumulative_Pos_X)))
day_of_yearx <- dfcx$DayofYear_X
markercumulativex <- data.frame(cbind(mar1cumx,mar2cumx,mar3cumx,mar4cumx,mar5cumx,mar6cumx,mar7cumx,mar8cumx,mar9cumx,mar10cumx,subjcumx,day_of_yearx))
head(markercumulativex)
tail(markercumulativex)
#Now processing everything for country Y:
mar1cumy <- cumsum(dfcy$Marker_01_Y)
mar2cumy <- cumsum(dfcy$Marker_02_Y)
mar3cumy <- cumsum(dfcy$Marker_03_Y)
mar4cumy <- cumsum(dfcy$Marker_04_Y)
mar5cumy <- cumsum(dfcy$Marker_05_Y)
mar6cumy <- cumsum(dfcy$Marker_06_Y)
mar7cumy <- cumsum(dfcy$Marker_07_Y)
mar8cumy <- cumsum(dfcy$Marker_08_Y)
mar9cumy <- cumsum(dfcy$Marker_09_Y)
mar10cumy <- cumsum(dfcy$Marker_10_Y)
subjcumy <- cumsum(rep(1,length(dfcy$Cumulative_Pos_Y)))
day_of_yeary <- dfcy$DayofYear_Y
markercumulativey <- data.frame(cbind(mar1cumy,mar2cumy,mar3cumy,mar4cumy,mar5cumy,mar6cumy,mar7cumy,mar8cumy,mar9cumy,mar10cumy,subjcumy,day_of_yeary))
head(markercumulativey)
tail(markercumulativey)
x_totals_by_day <- data.frame("Marker_01_X" = integer(), "Marker_02_X" = integer(), "Marker_03_X" = integer(), "Marker_04_X" = integer(), "Marker_05_X" = integer(), "Marker_06_X" = integer(), "Marker_07_X" = integer(), "Marker_08_X" = integer(), "Marker_09_X" = integer(), "Marker_10_X" = integer(), "Cumulative_Pos_X" = integer(), "DayofYear_X" = integer(), stringsAsFactors = FALSE)
#go from 120-175
#check if it is in day_of_yearx
#or go through each row
#using dayxcurr and dayxprev to know when the day increments. I will then save the row before the increment.
#if increment is >1 then I will save the row before the increment however many times the distance between the two was.
#initial state is set to the first day in "dataset" and all other columns are set to 0 in case there were no cases on the first day of data collection for either of the countries
dayxcurr = data$dayofYear[1]
dayxprev = data$dayofYear[1]
#this will be the initial vector that can be used if there were no positive cases on day 1
#it can be used for both country x and y
initvec <- c(rep(0, 11),first_day)
for (i in 1:length(markercumulativex$day_of_year)){
if (i == 1){
dayxprev = data$dayofYear[1]
}
else{
dayxprev = markercumulativex$day_of_yearx[i-1]
}
dayxcurr = markercumulativex$day_of_yearx[i]
if (dayxcurr != dayxprev){
diff = dayxcurr - dayxprev
if (i == 1){
for (j in 1:diff){
x_totals_by_day[nrow(x_totals_by_day)+1,] <- c(rep(0, 11),(first_day + j - 1))
}
}
else{
for (j in 1:diff){
x_totals_by_day[nrow(x_totals_by_day)+1,] <- markercumulativex[i-1,]
}
}
}
if (i == length(markercumulativex$day_of_year)){
x_totals_by_day[nrow(x_totals_by_day)+1,] <- tail(markercumulativex,1)
}
}
y_totals_by_day <- data.frame("Marker_01_Y" = integer(), "Marker_02_Y" = integer(), "Marker_03_Y" = integer(), "Marker_04_Y" = integer(), "Marker_05_Y" = integer(), "Marker_06_Y" = integer(), "Marker_07_Y" = integer(), "Marker_08_Y" = integer(), "Marker_09_Y" = integer(), "Marker_10_Y" = integer(), "Cumulative_Pos_Y" = integer(), "DayofYear_Y" = integer(), stringsAsFactors = FALSE)
#go from 120-175
#check if it is in day_of_yeary
#or go through each row
#using dayycurr and dayyprev to know when the day increments. I will then save the row before the increment.
#if increment is >1 then I will save the row before the increment however many times the distance between the two was.
#initial state is set to the first day in "dataset" and all other columns are set to 0 in case there were no cases on the first day of data collection for either of the countries
dayycurr = data$dayofYear[1]
dayyprev = data$dayofYear[1]
for (i in 1:length(markercumulativey$day_of_year)){
if (i == 1){
dayyprev = data$dayofYear[1]
}
else{
dayyprev = markercumulativey$day_of_yeary[i-1]
}
dayycurr = markercumulativey$day_of_yeary[i]
if (dayycurr != dayyprev){
diff = dayycurr - dayyprev
if (i == 1){
for (j in 1:diff){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- c(rep(0, 11),(first_day + j - 1))
}
}
else{
for (j in 1:diff){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- markercumulativey[i-1,]
}
}
}
if (i == length(markercumulativey$day_of_year)){
y_totals_by_day[nrow(y_totals_by_day)+1,] <- tail(markercumulativey,1)
}
}
#If there is a gap in day_of_yearx somewhere from 120-175 I need to insert a row in using data from previous row so that there are no gaps in days and so both country x and country y have the same nubmer of rows
tail(x_totals_by_day)
tail(y_totals_by_day)
head(x_totals_by_day)
head(y_totals_by_day)
